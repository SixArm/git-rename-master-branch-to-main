#!/bin/sh
#set -euf

# Include https://github.com/SixArm/posix-shell-script-kit
. "$(dirname "$(readlink -f "$0")")/posix-shell-script-kit"

## Program tracking ##

program_command="git-rename-master-branch-to-main"
program_version="1.4.1"
program_created="2020-06-28T05:13:28Z"
program_updated="2023-03-24T13:37:48Z"
program_license="GPL-2.0 or GPL-3.0 or contact us for more"
program_contact="Joel Parker Henderson (joel@joelparkerhenderson.com)"
program_variant="$program_command version $program_version updated $program_updated"

## Help

help(){
cat << CAT

git-rename-master-branch-to-main

Syntax:

    git-rename-master-branch-to-main [options]

This tool helps you use git to change your git repository
from the default branch name 'master' to a new name 'main'.

This tool is intentionally step-by-step, with user prompts,
in order to be suitable for one-time use by people who may 
be less-familiar with git, and who want to proceed carefully.

If you are a skilled git user, or if you have many repos and
you want to automate changing them, then you edit this tool
to remove prompts, or search the net for automation scripts.

Constructive feedback welcome.

Options:

  * -h --help: print program help

  * -V --version: print program information

Known issues:

  * If the repository has no commits, then this tool doesn't 
    detect the master branch, and doesn't do the rename.

Future goals:

  * Add checks for remote pull requests on master.

CAT
}

## Helpers

ask_to_continue() {
	printf %s "Continue? (yes/no) "
	read x
	if [ "$x" == "${x#[Yy]}" ]; then
		die "Abort."
	fi
}

rename_via_bitbucket() {
	#TODO please write function akin to `rename_via_github`
	return 0
}

rename_via_github() {

	out "Do you want to change the default branch name at GitHub?"
	read x
	if [ "$x" != "${x#[Yy]}" ]; then
		return 1
	fi

	out "Do you want to do the change by using the GitHub API?"
	out "You will need your GitHub user name, GitHub repo name,"
	out "and GitHub authorization token. If you don\'t know these,"
	out "then skip this GitHub API step, and instead do it manually."
	printf %s "Use the GitHub API now? (yes/no) "
	read x
	if [ "$x" != "${x#[Yy]}" ]; then
		return 1
	fi

	out "What is your GitHub user name?"
	user_name=$(ask)
	if [ "$user_name" == "" ]; then
		err "No answer, so skipping to the next step."
		return 2
	fi

	out "What is your GitHub repo name?"
	repo_name=$(ask)
	if [ "$repo_name" == "" ]; then
		err "No answer, so skipping to the next step."
		return 3
	fi

	out "What is your GitHub authentication token?"
	auth_token=$(ask)
	if [ "$auth_token" == "" ]; then
		err "No answer, so skipping to the next step."
		return 4
	fi

	curl -X PATCH \
	-H "Accept: application/vnd.github.v3+json" \
	-H "Authorization: token $auth_token" \
	"https://api.github.com/repos/$user_name/$repo_name" \
	-d '{"default_branch": "main" }'
	
}

rename_via_gitlab() {
	#TODO please write function akin to `rename_via_github`
	return 0
}

## Do the branch rename step by step

rename() {

	out "This tool helps you use git to change your git repository"
	out "from the default branch name 'master' to a new name 'main'."

	git show-ref --verify --quiet refs/heads/master
	if [ "$?" -ne 0 ]; then
		err "This tool expects a git branch name 'master',"
		err "but cannot find that branch name in your repo."
		die "Abort."
	fi

	git show-ref --verify --quiet refs/heads/main
	if [ "$?" -eq 0 ]; then
		err "This tool expects to create a git branch name 'main',"
		err "but a branch name 'main' already exists in your repo."
		die "Abort."
	fi

	out "This tool is ready to adjust your local master branch,"
	out "by doing a reset via 'git reset --hard origin/master'."
	ask_to_continue
	git checkout master
	git reset --hard origin/master

	out "This tool is ready to rename the branch and push it."
	ask_to_continue
	git branch -m master main
	git push -u origin main

	#TODO add more git hosting sites here
	rename_via_bitbucket 
	rename_via_github
	rename_via_gitlab
	
	out "Now you need to manually sign in to each of your upstream hosts"
	out "that still use the branch name 'master', and change it to 'main'."
	out "You must do the change now, before you continue."
	ask_to_continue

	out "This tool is ready to delete your origin/master branch."
	ask_to_continue
	git push origin --delete master
	git remote set-head origin -a

	out "Success. Your default branch is renamed."
	exit 0
}

if [ $# -eq 0 ]; then
	rename
fi

while [ $# -gt 0 ]; do
  case $1 in
    -h | --help )
      help
      ;;
    -V | --version )
      out $program_variant
      ;;
    *)
      break
  esac
  shift
done
